{
    "contents" : "## load packages\nlibrary(dplyr)\n\n\n## 0. Read the input files.\n##########################\n\n## Read names of variables aka features\nfeatures <- readLines(\"features.txt\")\n\n## read the test data,  with the variable names aka features\nx <- read.table(\"x_test.txt\", header = F, col.names = features)\n## read the subjects test variable subject_test.txt\nsubjects <- readLines(\"subject_test.txt\")\n## read the activities variable from y_test.txt\ny <- readLines(\"y_test.txt\")\n## add subjects and activity variables to test data frame\nTst <-  data.frame(Subject = as.integer(subjects), Activity = y, x)\n\n## read the train  data,  with the variable names aka features\n## store into Har immediately to save memory later\nHar <- read.table(\"x_train.txt\", header = F,col.names = features)\n## read the subjects train variable\nsubjects <- readLines(\"subject_train.txt\")\n## read the activities variable\ny <- readLines(\"y_train.txt\")\n## add subjects and activity variables to Har data frame\nHar <-  data.frame(Subject = as.integer(subjects), Activity = y, Har)\n\n## Read the labels for the activities\nactivities <- read.table(\"activity_labels.txt\", header = F, col.names = c(\"Activity\", \"ActLabel\"))\nactivities$Activity <-as.factor(activities$Activity)\n\n## 1. Merges the training and the test sets to create one data set.\n#####################################################################\n## append Tst to Har saving memory\nHar <- bind_rows(Har,Tst)\ndim(Har)\n\n## 2. Extracts only the measurements on the mean and standard deviation for each measurement. \n############################################################################################\n## inlcude [.] in contains to remove functions such as meanfreq() which is weighted average\nHar <- select(Har,1:2, contains(\".mean.\"), contains(\".std.\"))\n\n## 3. Use descriptive activity names to name the activities in the data set.\n############################################################################\nHar <- left_join(Har, activities, by = \"Activity\")\nHar <- mutate(Har,Activity = ActLabel)\nHar <- select(Har, -ActLabel)\n\n## 4. Appropriately labels the data set with descriptive variable names.\n#######################################################################\n## remove the Xnnn. from column names\nCols = colnames(Har)\nCols[-(1:2)] = substr(gsub(\"^.*?[.]\",\"[.]\",Cols[-(1:2)]),4, stop=100L)\n## replace ... with _ , .. with and , . with _\nCols = gsub(\"[.][.][.]\",\"_\", Cols)\nCols = gsub(\"[.][.]\",\"_\", Cols)\nCols = gsub(\"[.]\",\"_\", Cols)\n## update the col names in the data frame\ncolnames(Har) <- Cols\n  \n## 5. From the data set obtained before, create a second, independent tidy data set.\n####################################################################################\n## with the average of each variable for each activity and each subject\n## Take the mean per Subject and Activity\nHar <- group_by(Har, Subject, Activity)\nHar <- summarise_each(Har, funs(mean))\n\n## write the tidy dataset to disk\nwrite.table(Har, file =\"TidyUCIHAR.txt\", row.names = F )\n\n#########THE END############\n",
    "created" : 1442844436862.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2832243975",
    "id" : "833DD28B",
    "lastKnownWriteTime" : 1442845591,
    "path" : "C:/EDS/DSS/GetandCleanData/UCIHARProject/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}